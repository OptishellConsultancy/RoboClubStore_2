<div id="settings_plugin_hologram" class="tab-pane">

    <div>
        <h3>Hologram settings</h3>
    </div>

    <div>
        <h4>Printer Plate Dimensions</h4>
        <span>Note: Not build volume</span>
        <br>
        <div>Length: <input type="number" step="1" data-bind="value: printerLength"></div>
        <div>Width: <input type="number" step="1" data-bind="value: printerWidth"></div>
        <div>Depth: <input type="number" step="1" data-bind="value: printerDepth"></div>
        <button data-bind="click: sendPrinterDimensions">Update Dimensions</button>
    </div>
    
    <br>

    <div>
        <h4>Select Plate</h4>
        <span>Please drag the box over the plate</span>
        <br>
        <button data-bind="click: getSnapshot">Get Snapshot</button>
        <div id="image-container" style="position: relative;">
            <img id="hologram-snapshot" data-bind="attr:{src: snapshotUrl}, visible: snapshotUrl() != null">
            <canvas id="overlay-canvas" data-bind="event: {
                mousedown: mouseDown, 
                mousemove: mouseMove,
                mouseup: mouseUp,
                mouseout: mouseUp
            }" style="position: absolute; top: 0; left: 0; width: 100%; pointer-events: auto;"></canvas>
        </div>
        <span>Locking in the build plate will start the auto-calibration, which may take a few minutes. An alert will be sent when completed.</span>
        <br>
        <button data-bind="click: savePoints">Lock in Plate Area</button>
    </div>

    <br>

    <h4>Image Adjustments</h4>
    <span>Note: Make sure the arrow points to the origin</span>
    <div class="adjustment-sliders">
        
        <div class="slider-container">
            Elev: <input type="number" step="0.01" min="-90" max="90" data-bind="value: sliderValues()[0], event:{'input': function(data, event) {sliderValues()[0](parseFloat(event.target.value)); updateImage();}}">
        </div>
        <div class="slider-container">
            Azim: <input type="number" step="0.01" min="-180" max="180" data-bind="value: sliderValues()[1], event:{'input': function(data, event) {sliderValues()[1](parseFloat(event.target.value)); updateImage();}}">
        </div>
        <div class="slider-container">
            Roll: <input type="number" step="0.01" min="-30" max="30" data-bind="value: sliderValues()[2], event:{'input': function(data, event) {sliderValues()[2](parseFloat(event.target.value)); updateImage();}}">
        </div>
        <div class="slider-container">
            Focal length: <input type="number" step="0.001" min="-1" max="1" data-bind="value: sliderValues()[3], event:{'input': function(data, event) {sliderValues()[3](parseFloat(event.target.value)); updateImage();}}">
        </div>
        <div class="slider-container">
            Scale: <input type="number" step="0.01" min="-3" max="3" data-bind="value: sliderValues()[4], event:{'input': function(data, event) {sliderValues()[4](parseFloat(event.target.value)); updateImage();}}">
        </div>
        
        <h5>Updated Image</h5>
        <div id="updated-image-container" style="position: relative;">
            <img data-bind="attr: { src: updatedImageUrl }" />
        </div>

        <div>
            <button data-bind="click: sendOffSets">Save Off Sets</button>
        </div>

    </div>

</div>
